{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/axios/index.js","botscript.plugins.js","node_modules/axios/lib/adapters/xhr.js","node_modules/axios/lib/axios.js","node_modules/axios/lib/cancel/Cancel.js","node_modules/axios/lib/cancel/CancelToken.js","node_modules/axios/lib/cancel/isCancel.js","node_modules/axios/lib/core/Axios.js","node_modules/axios/lib/core/InterceptorManager.js","node_modules/axios/lib/core/buildFullPath.js","node_modules/axios/lib/core/createError.js","node_modules/axios/lib/core/dispatchRequest.js","node_modules/axios/lib/core/enhanceError.js","node_modules/axios/lib/core/mergeConfig.js","node_modules/axios/lib/core/settle.js","node_modules/axios/lib/core/transformData.js","node_modules/axios/lib/defaults.js","node_modules/axios/lib/helpers/bind.js","node_modules/axios/lib/helpers/buildURL.js","node_modules/axios/lib/helpers/combineURLs.js","node_modules/axios/lib/helpers/cookies.js","node_modules/axios/lib/helpers/isAbsoluteURL.js","node_modules/axios/lib/helpers/isAxiosError.js","node_modules/axios/lib/helpers/isURLSameOrigin.js","node_modules/axios/lib/helpers/normalizeHeaderName.js","node_modules/axios/lib/helpers/parseHeaders.js","node_modules/axios/lib/helpers/spread.js","node_modules/axios/lib/utils.js","node_modules/debug/src/browser.js","node_modules/debug/src/common.js","node_modules/jexl/lib/Expression.js","node_modules/jexl/lib/Jexl.js","node_modules/jexl/lib/Lexer.js","node_modules/jexl/lib/PromiseSync.js","node_modules/jexl/lib/evaluator/Evaluator.js","node_modules/jexl/lib/evaluator/handlers.js","node_modules/jexl/lib/grammar.js","node_modules/jexl/lib/parser/Parser.js","node_modules/jexl/lib/parser/handlers.js","node_modules/jexl/lib/parser/states.js","node_modules/ms/index.js","node_modules/process/browser.js","src/interfaces/types.ts","src/lib/logger.ts","src/lib/utils.ts","src/plugins/addTimeNow.ts","src/plugins/index.ts","src/plugins/noReplyHandle.ts","src/plugins/normalize.ts","src/plugins/utils/clean.ts"],"names":["f","exports","module","define","amd","window","global","self","this","BotScriptPlugins","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","./lib/axios","2","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","createError","xhrAdapter","config","Promise","dispatchXhrRequest","resolve","reject","requestData","data","requestHeaders","headers","isFormData","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","url","open","method","toUpperCase","params","paramsSerializer","timeout","onreadystatechange","handleLoad","readyState","status","responseURL","indexOf","responseHeaders","getAllResponseHeaders","response","responseType","responseText","statusText","onabort","handleAbort","onerror","handleError","ontimeout","handleTimeout","timeoutErrorMessage","isStandardBrowserEnv","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","setRequestHeader","val","key","toLowerCase","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancelToken","promise","then","onCanceled","cancel","abort","send","../core/buildFullPath","../core/createError","./../core/settle","./../helpers/buildURL","./../helpers/cookies","./../helpers/isURLSameOrigin","./../helpers/parseHeaders","./../utils","3","bind","Axios","mergeConfig","createInstance","defaultConfig","context","instance","prototype","extend","axios","create","instanceConfig","defaults","Cancel","CancelToken","isCancel","all","promises","spread","isAxiosError","default","./cancel/Cancel","./cancel/CancelToken","./cancel/isCancel","./core/Axios","./core/mergeConfig","./defaults","./helpers/bind","./helpers/isAxiosError","./helpers/spread","./utils","4","message","toString","__CANCEL__","5","executor","TypeError","resolvePromise","promiseExecutor","token","reason","throwIfRequested","source","./Cancel","6","value","7","InterceptorManager","dispatchRequest","interceptors","arguments","chain","unshiftRequestInterceptors","interceptor","unshift","fulfilled","rejected","pushResponseInterceptors","push","shift","getUri","replace","forEachMethodNoData","forEachMethodWithData","../helpers/buildURL","./InterceptorManager","./dispatchRequest","./mergeConfig","8","handlers","use","eject","id","fn","forEachHandler","h","9","isAbsoluteURL","combineURLs","requestedURL","../helpers/combineURLs","../helpers/isAbsoluteURL","10","enhanceError","error","./enhanceError","11","transformData","throwIfCancellationRequested","transformRequest","merge","common","cleanHeaderConfig","adapter","onAdapterResolution","transformResponse","onAdapterRejection","../cancel/isCancel","../defaults","./transformData","12","toJSON","name","description","number","fileName","lineNumber","columnNumber","stack","13","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","target","isPlainObject","isArray","slice","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","axiosKeys","concat","otherKeys","Object","keys","filter","filterAxiosKeys","../utils","14","validateStatus","./createError","15","fns","transform","16","process","normalizeHeaderName","DEFAULT_CONTENT_TYPE","Content-Type","setContentTypeIfUnset","getDefaultAdapter","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","JSON","stringify","parse","maxContentLength","maxBodyLength","Accept","./adapters/http","./adapters/xhr","./helpers/normalizeHeaderName","_process","17","thisArg","wrap","args","Array","apply","18","encode","serializedParams","parts","serialize","parseValue","v","isDate","toISOString","join","hashmarkIndex","19","relativeURL","20","standardBrowserEnv","write","expires","path","domain","secure","cookie","isNumber","Date","toGMTString","isString","document","match","RegExp","decodeURIComponent","remove","now","21","test","22","payload","23","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","location","requestURL","parsed","24","normalizedName","processHeader","25","ignoreDuplicateOf","split","parser","line","trim","substr","26","callback","arr","27","getPrototypeOf","isFunction","obj","l","hasOwnProperty","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","result","assignValue","b","str","stripBOM","content","charCodeAt","28","log","console","formatArgs","useColors","namespace","humanize","diff","color","splice","index","lastC","save","namespaces","storage","setItem","removeItem","load","getItem","env","DEBUG","type","__nwjs","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","$1","localstorage","localStorage","colors","formatters","j","./common","29","setup","selectColor","createDebug","Math","abs","prevTime","debug","enabled","curr","Number","ms","prev","coerce","format","formatter","destroy","init","instances","delimiter","newDebug","toNamespace","regexp","substring","disable","names","map","skips","enable","len","30","Evaluator","Lexer","Parser","PromiseSync","Expression","[object Object]","lang","exprStr","_lang","_lexer","grammar","_exprStr","_ast","lexer","tokens","tokenize","addTokens","complete","_eval","res","ast","_getAst","transforms","eval","compile","./Lexer","./PromiseSync","./evaluator/Evaluator","./parser/Parser","31","defaultGrammar","elements","Jexl","expr","_grammar","assign","_transforms","operator","precedence","_addGrammarElement","weight","Infinity","expression","createExpression","_getLang","evalSync","strs","reduce","acc","idx","./Expression","./grammar","32","numericRegex","identRegex","escEscRegex","whitespaceRegex","preOpRegexElems","postOpRegexElems","minusNegatesAfter","regex","_getSplitRegex","elem","negate","_isWhitespace","raw","_isNegative","_createToken","getElements","getTokens","element","_unquote","parseFloat","_splitRegex","elemArray","sort","_escapeRegExp","some","quote","escQuoteRegex","33","_resolve","_reject","resolved","catch","vals","34","relativeContext","_context","_relContext","asts","subject","evalInst","values","results","./handlers","35","ArrayLiteral","evalArray","BinaryExpression","left","right","ConditionalExpression","consequent","alternate","FilterExpression","relative","_filterRelative","_filterStatic","Identifier","from","Literal","ObjectLiteral","evalMap","Transform","UnaryExpression","36",".","[","]","|","{","}",":",",","(",")","?","+","-","*","/","//","floor","%","^","pow","==","!=",">",">=","<","<=","&&","||","in","!","37","states","prefix","stopMap","_state","_tree","_relative","_stopMap","state","startExpr","subHandler","_subParser","_startSubExpression","stopState","addToken","_endSubExpression","_parentStop","tokenTypes","typeOpts","handleFunc","handler","toState","_cursor","completable","node","_setParent","_parent","_placeAtCursor","parent","defineProperty","writable","endStates","./states","38","argVal","arrayStart","arrayVal","binaryOp","dot","_nextIdentEncapsulate","_nextIdentRelative","_placeBeforeCursor","isRelative","identifier","literal","objKey","_curObjKey","objStart","objVal","subExpression","ternaryEnd","ternaryMid","ternaryStart","unaryOp","39","expectOperand","openParen","openCurl","openBracket","expectBinOp","question","expectTransform","expectObjKey","closeCurl","expectKeyValSep","colon","postTransform","postTransformArgs","traverse","closeBracket","closeParen","comma","40","s","m","d","w","y","plural","msAbs","isPlural","round","options","String","exec","isNaN","long","fmtLong","fmtShort","41","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","runClearTimeout","marker","Item","array","noop","nextTick","title","browser","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","42","Types","43","__importDefault","mod","__esModule","Logger","debug_1","_debug","_info","_warn","_error","info","warn","44","__awaiter","_arguments","P","generator","step","next","done","adopt","downloadBotScripts","callHttpService","evaluate","testConditionalType","testConditionalReply","testConditionalFlow","random","axios_1","jexl_1","types_1","logger","dialogue","req","separator","conditions","x","cond","botId","variables","vars","startsWith","err","msg","candidates","ConditionalFlow","ConditionalReply","command","body","vResult","get","vContentType","../interfaces/types","./logger","jexl","45","addTimeNow","ctx","time","getHours","getMinutes","46","__createBinding","k","k2","enumerable","__exportStar","./addTimeNow","./noReplyHandle","./normalize","47","__setModuleDefault","__importStar","noReplyHandle","speechResponse","flows","has","currentFlow","dialog","replyCandidate","replies","../lib/utils","48","normalize","clean_1","./utils/clean","49","re1","re2","re3","re4","re5","re6","re7","re8","re9","re10","pre","post"],"mappings":"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","file":"botscript.plugins.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports = require('./lib/axios');",null,"'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/*\n * Jexl\n * Copyright 2019 Tom Shawver\n */\n\nconst Evaluator = require('./evaluator/Evaluator')\nconst Lexer = require('./Lexer')\nconst Parser = require('./parser/Parser')\nconst PromiseSync = require('./PromiseSync')\n\nclass Expression {\n  constructor(lang, exprStr) {\n    this._lang = lang\n    this._lexer = new Lexer(lang.grammar)\n    this._exprStr = exprStr\n    this._ast = null\n  }\n\n  /**\n   * Forces a compilation of the expression string that this Expression object\n   * was constructed with. This function can be called multiple times; useful\n   * if the language elements of the associated Jexl instance change.\n   * @returns {Expression} this Expression instance, for convenience\n   */\n  compile() {\n    const lexer = new Lexer(this._lang.grammar)\n    const parser = new Parser(this._lang.grammar)\n    const tokens = lexer.tokenize(this._exprStr)\n    parser.addTokens(tokens)\n    this._ast = parser.complete()\n    return this\n  }\n\n  /**\n   * Asynchronously evaluates the expression within an optional context.\n   * @param {Object} [context] A mapping of variables to values, which will be\n   *      made accessible to the Jexl expression when evaluating it\n   * @returns {Promise<*>} resolves with the result of the evaluation.\n   */\n  eval(context = {}) {\n    return this._eval(context, Promise)\n  }\n\n  /**\n   * Synchronously evaluates the expression within an optional context.\n   * @param {Object} [context] A mapping of variables to values, which will be\n   *      made accessible to the Jexl expression when evaluating it\n   * @returns {*} the result of the evaluation.\n   * @throws {*} on error\n   */\n  evalSync(context = {}) {\n    const res = this._eval(context, PromiseSync)\n    if (res.error) throw res.error\n    return res.value\n  }\n\n  _eval(context, promise) {\n    return promise.resolve().then(() => {\n      const ast = this._getAst()\n      const evaluator = new Evaluator(\n        this._lang.grammar,\n        this._lang.transforms,\n        context,\n        undefined,\n        promise\n      )\n      return evaluator.eval(ast)\n    })\n  }\n\n  _getAst() {\n    if (!this._ast) this.compile()\n    return this._ast\n  }\n}\n\nmodule.exports = Expression\n","/*\n * Jexl\n * Copyright 2019 Tom Shawver\n */\n\nconst Expression = require('./Expression')\nconst defaultGrammar = require('./grammar').elements\n\n/**\n * Jexl is the Javascript Expression Language, capable of parsing and\n * evaluating basic to complex expression strings, combined with advanced\n * xpath-like drilldown into native Javascript objects.\n * @constructor\n */\nclass Jexl {\n  constructor() {\n    // Allow expr to be called outside of the jexl context\n    this.expr = this.expr.bind(this)\n    this._grammar = Object.assign({}, defaultGrammar)\n    this._lexer = null\n    this._transforms = {}\n  }\n\n  /**\n   * Adds a binary operator to Jexl at the specified precedence. The higher the\n   * precedence, the earlier the operator is applied in the order of operations.\n   * For example, * has a higher precedence than +, because multiplication comes\n   * before division.\n   *\n   * Please see grammar.js for a listing of all default operators and their\n   * precedence values in order to choose the appropriate precedence for the\n   * new operator.\n   * @param {string} operator The operator string to be added\n   * @param {number} precedence The operator's precedence\n   * @param {function} fn A function to run to calculate the result. The function\n   *      will be called with two arguments: left and right, denoting the values\n   *      on either side of the operator. It should return either the resulting\n   *      value, or a Promise that resolves with the resulting value.\n   */\n  addBinaryOp(operator, precedence, fn) {\n    this._addGrammarElement(operator, {\n      type: 'binaryOp',\n      precedence: precedence,\n      eval: fn\n    })\n  }\n\n  /**\n   * Adds a unary operator to Jexl. Unary operators are currently only supported\n   * on the left side of the value on which it will operate.\n   * @param {string} operator The operator string to be added\n   * @param {function} fn A function to run to calculate the result. The function\n   *      will be called with one argument: the literal value to the right of the\n   *      operator. It should return either the resulting value, or a Promise\n   *      that resolves with the resulting value.\n   */\n  addUnaryOp(operator, fn) {\n    this._addGrammarElement(operator, {\n      type: 'unaryOp',\n      weight: Infinity,\n      eval: fn\n    })\n  }\n\n  /**\n   * Adds or replaces a transform function in this Jexl instance.\n   * @param {string} name The name of the transform function, as it will be used\n   *      within Jexl expressions\n   * @param {function} fn The function to be executed when this transform is\n   *      invoked. It will be provided with at least one argument:\n   *          - {*} value: The value to be transformed\n   *          - {...*} args: The arguments for this transform\n   */\n  addTransform(name, fn) {\n    this._transforms[name] = fn\n  }\n\n  /**\n   * Syntactic sugar for calling {@link #addTransform} repeatedly.  This function\n   * accepts a map of one or more transform names to their transform function.\n   * @param {{}} map A map of transform names to transform functions\n   */\n  addTransforms(map) {\n    for (let key in map) {\n      if (map.hasOwnProperty(key)) {\n        this._transforms[key] = map[key]\n      }\n    }\n  }\n\n  /**\n   * Creates an Expression object from the given Jexl expression string, and\n   * immediately compiles it. The returned Expression object can then be\n   * evaluated multiple times with new contexts, without generating any\n   * additional string processing overhead.\n   * @param {string} expression The Jexl expression to be compiled\n   * @returns {Expression} The compiled Expression object\n   */\n  compile(expression) {\n    const exprObj = this.createExpression(expression)\n    return exprObj.compile()\n  }\n\n  /**\n   * Constructs an Expression object from a Jexl expression string.\n   * @param {string} expression The Jexl expression to be wrapped in an\n   *    Expression object\n   * @returns {Expression} The Expression object representing the given string\n   */\n  createExpression(expression) {\n    const lang = this._getLang()\n    return new Expression(lang, expression)\n  }\n\n  /**\n   * Retrieves a previously set transform function.\n   * @param {string} name The name of the transform function\n   * @returns {function} The transform function\n   */\n  getTransform(name) {\n    return this._transforms[name]\n  }\n\n  /**\n   * Asynchronously evaluates a Jexl string within an optional context.\n   * @param {string} expression The Jexl expression to be evaluated\n   * @param {Object} [context] A mapping of variables to values, which will be\n   *      made accessible to the Jexl expression when evaluating it\n   * @returns {Promise<*>} resolves with the result of the evaluation.\n   */\n  eval(expression, context = {}) {\n    const exprObj = this.createExpression(expression)\n    return exprObj.eval(context)\n  }\n\n  /**\n   * Synchronously evaluates a Jexl string within an optional context.\n   * @param {string} expression The Jexl expression to be evaluated\n   * @param {Object} [context] A mapping of variables to values, which will be\n   *      made accessible to the Jexl expression when evaluating it\n   * @returns {*} the result of the evaluation.\n   * @throws {*} on error\n   */\n  evalSync(expression, context = {}) {\n    const exprObj = this.createExpression(expression)\n    return exprObj.evalSync(context)\n  }\n\n  expr(strs, ...args) {\n    const exprStr = strs.reduce((acc, str, idx) => {\n      const arg = idx < args.length ? args[idx] : ''\n      acc += str + arg\n      return acc\n    }, '')\n    return this.createExpression(exprStr)\n  }\n\n  /**\n   * Removes a binary or unary operator from the Jexl grammar.\n   * @param {string} operator The operator string to be removed\n   */\n  removeOp(operator) {\n    if (\n      this._grammar[operator] &&\n      (this._grammar[operator].type === 'binaryOp' ||\n        this._grammar[operator].type === 'unaryOp')\n    ) {\n      delete this._grammar[operator]\n    }\n  }\n\n  /**\n   * Adds an element to the grammar map used by this Jexl instance.\n   * @param {string} str The key string to be added\n   * @param {{type: <string>}} obj A map of configuration options for this\n   *      grammar element\n   * @private\n   */\n  _addGrammarElement(str, obj) {\n    this._grammar[str] = obj\n  }\n\n  /**\n   * Gets an object defining the dynamic language elements of this Jexl\n   * instance.\n   * @returns {{ grammar: object, transforms: object }} A language definition\n   *    object\n   * @private\n   */\n  _getLang() {\n    return {\n      grammar: this._grammar,\n      transforms: this._transforms\n    }\n  }\n}\n\nmodule.exports = new Jexl()\nmodule.exports.Jexl = Jexl\n","/*\n * Jexl\n * Copyright 2019 Tom Shawver\n */\n\nconst numericRegex = /^-?(?:(?:[0-9]*\\.[0-9]+)|[0-9]+)$/\nconst identRegex = /^[a-zA-Z_$][a-zA-Z0-9_$]*$/\nconst escEscRegex = /\\\\\\\\/\nconst whitespaceRegex = /^\\s*$/\nconst preOpRegexElems = [\n  // Strings\n  \"'(?:(?:\\\\\\\\')|[^'])*'\",\n  '\"(?:(?:\\\\\\\\\")|[^\"])*\"',\n  // Whitespace\n  '\\\\s+',\n  // Booleans\n  '\\\\btrue\\\\b',\n  '\\\\bfalse\\\\b'\n]\nconst postOpRegexElems = [\n  // Identifiers\n  '[a-zA-Z_\\\\$][a-zA-Z0-9_\\\\$]*',\n  // Numerics (without negative symbol)\n  '(?:(?:[0-9]*\\\\.[0-9]+)|[0-9]+)'\n]\nconst minusNegatesAfter = [\n  'binaryOp',\n  'unaryOp',\n  'openParen',\n  'openBracket',\n  'question',\n  'colon'\n]\n\n/**\n * Lexer is a collection of stateless, statically-accessed functions for the\n * lexical parsing of a Jexl string.  Its responsibility is to identify the\n * \"parts of speech\" of a Jexl expression, and tokenize and label each, but\n * to do only the most minimal syntax checking; the only errors the Lexer\n * should be concerned with are if it's unable to identify the utility of\n * any of its tokens.  Errors stemming from these tokens not being in a\n * sensible configuration should be left for the Parser to handle.\n * @type {{}}\n */\nclass Lexer {\n  constructor(grammar) {\n    this._grammar = grammar\n  }\n\n  /**\n   * Splits a Jexl expression string into an array of expression elements.\n   * @param {string} str A Jexl expression string\n   * @returns {Array<string>} An array of substrings defining the functional\n   *      elements of the expression.\n   */\n  getElements(str) {\n    const regex = this._getSplitRegex()\n    return str.split(regex).filter(elem => {\n      // Remove empty strings\n      return elem\n    })\n  }\n\n  /**\n   * Converts an array of expression elements into an array of tokens.  Note that\n   * the resulting array may not equal the element array in length, as any\n   * elements that consist only of whitespace get appended to the previous\n   * token's \"raw\" property.  For the structure of a token object, please see\n   * {@link Lexer#tokenize}.\n   * @param {Array<string>} elements An array of Jexl expression elements to be\n   *      converted to tokens\n   * @returns {Array<{type, value, raw}>} an array of token objects.\n   */\n  getTokens(elements) {\n    const tokens = []\n    let negate = false\n    for (let i = 0; i < elements.length; i++) {\n      if (this._isWhitespace(elements[i])) {\n        if (tokens.length) {\n          tokens[tokens.length - 1].raw += elements[i]\n        }\n      } else if (elements[i] === '-' && this._isNegative(tokens)) {\n        negate = true\n      } else {\n        if (negate) {\n          elements[i] = '-' + elements[i]\n          negate = false\n        }\n        tokens.push(this._createToken(elements[i]))\n      }\n    }\n    // Catch a - at the end of the string. Let the parser handle that issue.\n    if (negate) {\n      tokens.push(this._createToken('-'))\n    }\n    return tokens\n  }\n\n  /**\n   * Converts a Jexl string into an array of tokens.  Each token is an object\n   * in the following format:\n   *\n   *     {\n   *         type: <string>,\n   *         [name]: <string>,\n   *         value: <boolean|number|string>,\n   *         raw: <string>\n   *     }\n   *\n   * Type is one of the following:\n   *\n   *      literal, identifier, binaryOp, unaryOp\n   *\n   * OR, if the token is a control character its type is the name of the element\n   * defined in the Grammar.\n   *\n   * Name appears only if the token is a control string found in\n   * {@link grammar#elements}, and is set to the name of the element.\n   *\n   * Value is the value of the token in the correct type (boolean or numeric as\n   * appropriate). Raw is the string representation of this value taken directly\n   * from the expression string, including any trailing spaces.\n   * @param {string} str The Jexl string to be tokenized\n   * @returns {Array<{type, value, raw}>} an array of token objects.\n   * @throws {Error} if the provided string contains an invalid token.\n   */\n  tokenize(str) {\n    const elements = this.getElements(str)\n    return this.getTokens(elements)\n  }\n\n  /**\n   * Creates a new token object from an element of a Jexl string. See\n   * {@link Lexer#tokenize} for a description of the token object.\n   * @param {string} element The element from which a token should be made\n   * @returns {{value: number|boolean|string, [name]: string, type: string,\n   *      raw: string}} a token object describing the provided element.\n   * @throws {Error} if the provided string is not a valid expression element.\n   * @private\n   */\n  _createToken(element) {\n    const token = {\n      type: 'literal',\n      value: element,\n      raw: element\n    }\n    if (element[0] === '\"' || element[0] === \"'\") {\n      token.value = this._unquote(element)\n    } else if (element.match(numericRegex)) {\n      token.value = parseFloat(element)\n    } else if (element === 'true' || element === 'false') {\n      token.value = element === 'true'\n    } else if (this._grammar[element]) {\n      token.type = this._grammar[element].type\n    } else if (element.match(identRegex)) {\n      token.type = 'identifier'\n    } else {\n      throw new Error(`Invalid expression token: ${element}`)\n    }\n    return token\n  }\n\n  /**\n   * Escapes a string so that it can be treated as a string literal within a\n   * regular expression.\n   * @param {string} str The string to be escaped\n   * @returns {string} the RegExp-escaped string.\n   * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions\n   * @private\n   */\n  _escapeRegExp(str) {\n    str = str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n    if (str.match(identRegex)) {\n      str = '\\\\b' + str + '\\\\b'\n    }\n    return str\n  }\n\n  /**\n   * Gets a RegEx object appropriate for splitting a Jexl string into its core\n   * elements.\n   * @returns {RegExp} An element-splitting RegExp object\n   * @private\n   */\n  _getSplitRegex() {\n    if (!this._splitRegex) {\n      // Sort by most characters to least, then regex escape each\n      const elemArray = Object.keys(this._grammar)\n        .sort((a, b) => {\n          return b.length - a.length\n        })\n        .map(elem => {\n          return this._escapeRegExp(elem)\n        }, this)\n      this._splitRegex = new RegExp(\n        '(' +\n          [\n            preOpRegexElems.join('|'),\n            elemArray.join('|'),\n            postOpRegexElems.join('|')\n          ].join('|') +\n          ')'\n      )\n    }\n    return this._splitRegex\n  }\n\n  /**\n   * Determines whether the addition of a '-' token should be interpreted as a\n   * negative symbol for an upcoming number, given an array of tokens already\n   * processed.\n   * @param {Array<Object>} tokens An array of tokens already processed\n   * @returns {boolean} true if adding a '-' should be considered a negative\n   *      symbol; false otherwise\n   * @private\n   */\n  _isNegative(tokens) {\n    if (!tokens.length) return true\n    return minusNegatesAfter.some(\n      type => type === tokens[tokens.length - 1].type\n    )\n  }\n\n  /**\n   * A utility function to determine if a string consists of only space\n   * characters.\n   * @param {string} str A string to be tested\n   * @returns {boolean} true if the string is empty or consists of only spaces;\n   *      false otherwise.\n   * @private\n   */\n  _isWhitespace(str) {\n    return !!str.match(whitespaceRegex)\n  }\n\n  /**\n   * Removes the beginning and trailing quotes from a string, unescapes any\n   * escaped quotes on its interior, and unescapes any escaped escape\n   * characters. Note that this function is not defensive; it assumes that the\n   * provided string is not empty, and that its first and last characters are\n   * actually quotes.\n   * @param {string} str A string whose first and last characters are quotes\n   * @returns {string} a string with the surrounding quotes stripped and escapes\n   *      properly processed.\n   * @private\n   */\n  _unquote(str) {\n    const quote = str[0]\n    const escQuoteRegex = new RegExp('\\\\\\\\' + quote, 'g')\n    return str\n      .substr(1, str.length - 2)\n      .replace(escQuoteRegex, quote)\n      .replace(escEscRegex, '\\\\')\n  }\n}\n\nmodule.exports = Lexer\n","/*\n * Jexl\n * Copyright 2019 Tom Shawver\n */\n\nclass PromiseSync {\n  constructor(fn) {\n    fn(this._resolve.bind(this), this._reject.bind(this))\n  }\n\n  catch(rejected) {\n    if (this.error) {\n      try {\n        this._resolve(rejected(this.error))\n      } catch (e) {\n        this._reject(e)\n      }\n    }\n    return this\n  }\n\n  then(resolved, rejected) {\n    if (!this.error) {\n      try {\n        this._resolve(resolved(this.value))\n      } catch (e) {\n        this._reject(e)\n      }\n    }\n    if (rejected) this.catch(rejected)\n    return this\n  }\n\n  _reject(error) {\n    this.value = undefined\n    this.error = error\n  }\n\n  _resolve(val) {\n    if (val instanceof PromiseSync) {\n      if (val.error) {\n        this._reject(val.error)\n      } else {\n        this._resolve(val.value)\n      }\n    } else {\n      this.value = val\n      this.error = undefined\n    }\n  }\n}\n\nPromiseSync.all = vals =>\n  new PromiseSync(resolve => {\n    const resolved = vals.map(val => {\n      while (val instanceof PromiseSync) {\n        if (val.error) throw Error(val.error)\n        val = val.value\n      }\n      return val\n    })\n    resolve(resolved)\n  })\n\nPromiseSync.resolve = val => new PromiseSync(resolve => resolve(val))\n\nPromiseSync.reject = error =>\n  new PromiseSync((resolve, reject) => reject(error))\n\nmodule.exports = PromiseSync\n","/*\n * Jexl\n * Copyright 2019 Tom Shawver\n */\n\nconst handlers = require('./handlers')\n\n/**\n * The Evaluator takes a Jexl expression tree as generated by the\n * {@link Parser} and calculates its value within a given context. The\n * collection of transforms, context, and a relative context to be used as the\n * root for relative identifiers, are all specific to an Evaluator instance.\n * When any of these things change, a new instance is required.  However, a\n * single instance can be used to simultaneously evaluate many different\n * expressions, and does not have to be reinstantiated for each.\n * @param {{}} grammar A grammar map against which to evaluate the expression\n *      tree\n * @param {{}} [transforms] A map of transform names to transform functions. A\n *      transform function takes two arguments:\n *          - {*} val: A value to be transformed\n *          - {{}} args: A map of argument keys to their evaluated values, as\n *              specified in the expression string\n *      The transform function should return either the transformed value, or\n *      a Promises/A+ Promise object that resolves with the value and rejects\n *      or throws only when an unrecoverable error occurs. Transforms should\n *      generally return undefined when they don't make sense to be used on the\n *      given value type, rather than throw/reject. An error is only\n *      appropriate when the transform would normally return a value, but\n *      cannot due to some other failure.\n * @param {{}} [context] A map of variable keys to their values. This will be\n *      accessed to resolve the value of each non-relative identifier. Any\n *      Promise values will be passed to the expression as their resolved\n *      value.\n * @param {{}|Array<{}|Array>} [relativeContext] A map or array to be accessed\n *      to resolve the value of a relative identifier.\n * @param {function} promise A constructor for the Promise class to be used;\n *      probably either Promise or PromiseSync.\n */\nclass Evaluator {\n  constructor(\n    grammar,\n    transforms,\n    context,\n    relativeContext,\n    promise = Promise\n  ) {\n    this._grammar = grammar\n    this._transforms = transforms || {}\n    this._context = context || {}\n    this._relContext = relativeContext || this._context\n    this.Promise = promise\n  }\n\n  /**\n   * Evaluates an expression tree within the configured context.\n   * @param {{}} ast An expression tree object\n   * @returns {Promise<*>} resolves with the resulting value of the expression.\n   */\n  eval(ast) {\n    return this.Promise.resolve().then(() => {\n      return handlers[ast.type].call(this, ast)\n    })\n  }\n\n  /**\n   * Simultaneously evaluates each expression within an array, and delivers the\n   * response as an array with the resulting values at the same indexes as their\n   * originating expressions.\n   * @param {Array<string>} arr An array of expression strings to be evaluated\n   * @returns {Promise<Array<{}>>} resolves with the result array\n   */\n  evalArray(arr) {\n    return this.Promise.all(arr.map(elem => this.eval(elem)))\n  }\n\n  /**\n   * Simultaneously evaluates each expression within a map, and delivers the\n   * response as a map with the same keys, but with the evaluated result for each\n   * as their value.\n   * @param {{}} map A map of expression names to expression trees to be\n   *      evaluated\n   * @returns {Promise<{}>} resolves with the result map.\n   */\n  evalMap(map) {\n    const keys = Object.keys(map)\n    const result = {}\n    const asts = keys.map(key => {\n      return this.eval(map[key])\n    })\n    return this.Promise.all(asts).then(vals => {\n      vals.forEach((val, idx) => {\n        result[keys[idx]] = val\n      })\n      return result\n    })\n  }\n\n  /**\n   * Applies a filter expression with relative identifier elements to a subject.\n   * The intent is for the subject to be an array of subjects that will be\n   * individually used as the relative context against the provided expression\n   * tree. Only the elements whose expressions result in a truthy value will be\n   * included in the resulting array.\n   *\n   * If the subject is not an array of values, it will be converted to a single-\n   * element array before running the filter.\n   * @param {*} subject The value to be filtered usually an array. If this value is\n   *      not an array, it will be converted to an array with this value as the\n   *      only element.\n   * @param {{}} expr The expression tree to run against each subject. If the\n   *      tree evaluates to a truthy result, then the value will be included in\n   *      the returned array otherwise, it will be eliminated.\n   * @returns {Promise<Array>} resolves with an array of values that passed the\n   *      expression filter.\n   * @private\n   */\n  _filterRelative(subject, expr) {\n    const promises = []\n    if (!Array.isArray(subject)) {\n      subject = subject === undefined ? [] : [subject]\n    }\n    subject.forEach(elem => {\n      const evalInst = new Evaluator(\n        this._grammar,\n        this._transforms,\n        this._context,\n        elem,\n        this.Promise\n      )\n      promises.push(evalInst.eval(expr))\n    })\n    return this.Promise.all(promises).then(values => {\n      const results = []\n      values.forEach((value, idx) => {\n        if (value) {\n          results.push(subject[idx])\n        }\n      })\n      return results\n    })\n  }\n\n  /**\n   * Applies a static filter expression to a subject value.  If the filter\n   * expression evaluates to boolean true, the subject is returned if false,\n   * undefined.\n   *\n   * For any other resulting value of the expression, this function will attempt\n   * to respond with the property at that name or index of the subject.\n   * @param {*} subject The value to be filtered.  Usually an Array (for which\n   *      the expression would generally resolve to a numeric index) or an\n   *      Object (for which the expression would generally resolve to a string\n   *      indicating a property name)\n   * @param {{}} expr The expression tree to run against the subject\n   * @returns {Promise<*>} resolves with the value of the drill-down.\n   * @private\n   */\n  _filterStatic(subject, expr) {\n    return this.eval(expr).then(res => {\n      if (typeof res === 'boolean') {\n        return res ? subject : undefined\n      }\n      return subject[res]\n    })\n  }\n}\n\nmodule.exports = Evaluator\n","/*\n * Jexl\n * Copyright 2019 Tom Shawver\n */\n\n/**\n * Evaluates an ArrayLiteral by returning its value, with each element\n * independently run through the evaluator.\n * @param {{type: 'ObjectLiteral', value: <{}>}} ast An expression tree with an\n *      ObjectLiteral as the top node\n * @returns {Promise.<[]>} resolves to a map contained evaluated values.\n * @private\n */\nexports.ArrayLiteral = function(ast) {\n  return this.evalArray(ast.value)\n}\n\n/**\n * Evaluates a BinaryExpression node by running the Grammar's evaluator for\n * the given operator.\n * @param {{type: 'BinaryExpression', operator: <string>, left: {},\n *      right: {}}} ast An expression tree with a BinaryExpression as the top\n *      node\n * @returns {Promise<*>} resolves with the value of the BinaryExpression.\n * @private\n */\nexports.BinaryExpression = function(ast) {\n  return this.Promise.all([this.eval(ast.left), this.eval(ast.right)]).then(\n    arr => this._grammar[ast.operator].eval(arr[0], arr[1])\n  )\n}\n\n/**\n * Evaluates a ConditionalExpression node by first evaluating its test branch,\n * and resolving with the consequent branch if the test is truthy, or the\n * alternate branch if it is not. If there is no consequent branch, the test\n * result will be used instead.\n * @param {{type: 'ConditionalExpression', test: {}, consequent: {},\n *      alternate: {}}} ast An expression tree with a ConditionalExpression as\n *      the top node\n * @private\n */\nexports.ConditionalExpression = function(ast) {\n  return this.eval(ast.test).then(res => {\n    if (res) {\n      if (ast.consequent) {\n        return this.eval(ast.consequent)\n      }\n      return res\n    }\n    return this.eval(ast.alternate)\n  })\n}\n\n/**\n * Evaluates a FilterExpression by applying it to the subject value.\n * @param {{type: 'FilterExpression', relative: <boolean>, expr: {},\n *      subject: {}}} ast An expression tree with a FilterExpression as the top\n *      node\n * @returns {Promise<*>} resolves with the value of the FilterExpression.\n * @private\n */\nexports.FilterExpression = function(ast) {\n  return this.eval(ast.subject).then(subject => {\n    if (ast.relative) {\n      return this._filterRelative(subject, ast.expr)\n    }\n    return this._filterStatic(subject, ast.expr)\n  })\n}\n\n/**\n * Evaluates an Identifier by either stemming from the evaluated 'from'\n * expression tree or accessing the context provided when this Evaluator was\n * constructed.\n * @param {{type: 'Identifier', value: <string>, [from]: {}}} ast An expression\n *      tree with an Identifier as the top node\n * @returns {Promise<*>|*} either the identifier's value, or a Promise that\n *      will resolve with the identifier's value.\n * @private\n */\nexports.Identifier = function(ast) {\n  if (!ast.from) {\n    return ast.relative ? this._relContext[ast.value] : this._context[ast.value]\n  }\n  return this.eval(ast.from).then(context => {\n    if (context === undefined || context === null) {\n      return undefined\n    }\n    if (Array.isArray(context)) {\n      context = context[0]\n    }\n    return context[ast.value]\n  })\n}\n\n/**\n * Evaluates a Literal by returning its value property.\n * @param {{type: 'Literal', value: <string|number|boolean>}} ast An expression\n *      tree with a Literal as its only node\n * @returns {string|number|boolean} The value of the Literal node\n * @private\n */\nexports.Literal = function(ast) {\n  return ast.value\n}\n\n/**\n * Evaluates an ObjectLiteral by returning its value, with each key\n * independently run through the evaluator.\n * @param {{type: 'ObjectLiteral', value: <{}>}} ast An expression tree with an\n *      ObjectLiteral as the top node\n * @returns {Promise<{}>} resolves to a map contained evaluated values.\n * @private\n */\nexports.ObjectLiteral = function(ast) {\n  return this.evalMap(ast.value)\n}\n\n/**\n * Evaluates a Transform node by applying a function from the transforms map\n * to the subject value.\n * @param {{type: 'Transform', name: <string>, subject: {}}} ast An\n *      expression tree with a Transform as the top node\n * @returns {Promise<*>|*} the value of the transformation, or a Promise that\n *      will resolve with the transformed value.\n * @private\n */\nexports.Transform = function(ast) {\n  const transform = this._transforms[ast.name]\n  if (!transform) {\n    throw new Error(`Transform ${ast.name} is not defined.`)\n  }\n  return this.Promise.all([\n    this.eval(ast.subject),\n    this.evalArray(ast.args || [])\n  ]).then(arr => transform.apply(null, [arr[0]].concat(arr[1])))\n}\n\n/**\n * Evaluates a Unary expression by passing the right side through the\n * operator's eval function.\n * @param {{type: 'UnaryExpression', operator: <string>, right: {}}} ast An\n *      expression tree with a UnaryExpression as the top node\n * @returns {Promise<*>} resolves with the value of the UnaryExpression.\n * @constructor\n */\nexports.UnaryExpression = function(ast) {\n  return this.eval(ast.right).then(right =>\n    this._grammar[ast.operator].eval(right)\n  )\n}\n","/*\n * Jexl\n * Copyright 2019 Tom Shawver\n */\n\n/* eslint eqeqeq:0 */\n\n/**\n * A map of all expression elements to their properties. Note that changes\n * here may require changes in the Lexer or Parser.\n * @type {{}}\n */\nexports.elements = {\n  '.': { type: 'dot' },\n  '[': { type: 'openBracket' },\n  ']': { type: 'closeBracket' },\n  '|': { type: 'pipe' },\n  '{': { type: 'openCurl' },\n  '}': { type: 'closeCurl' },\n  ':': { type: 'colon' },\n  ',': { type: 'comma' },\n  '(': { type: 'openParen' },\n  ')': { type: 'closeParen' },\n  '?': { type: 'question' },\n  '+': {\n    type: 'binaryOp',\n    precedence: 30,\n    eval: (left, right) => left + right\n  },\n  '-': {\n    type: 'binaryOp',\n    precedence: 30,\n    eval: (left, right) => left - right\n  },\n  '*': {\n    type: 'binaryOp',\n    precedence: 40,\n    eval: (left, right) => left * right\n  },\n  '/': {\n    type: 'binaryOp',\n    precedence: 40,\n    eval: (left, right) => left / right\n  },\n  '//': {\n    type: 'binaryOp',\n    precedence: 40,\n    eval: (left, right) => Math.floor(left / right)\n  },\n  '%': {\n    type: 'binaryOp',\n    precedence: 50,\n    eval: (left, right) => left % right\n  },\n  '^': {\n    type: 'binaryOp',\n    precedence: 50,\n    eval: (left, right) => Math.pow(left, right)\n  },\n  '==': {\n    type: 'binaryOp',\n    precedence: 20,\n    eval: (left, right) => left == right\n  },\n  '!=': {\n    type: 'binaryOp',\n    precedence: 20,\n    eval: (left, right) => left != right\n  },\n  '>': {\n    type: 'binaryOp',\n    precedence: 20,\n    eval: (left, right) => left > right\n  },\n  '>=': {\n    type: 'binaryOp',\n    precedence: 20,\n    eval: (left, right) => left >= right\n  },\n  '<': {\n    type: 'binaryOp',\n    precedence: 20,\n    eval: (left, right) => left < right\n  },\n  '<=': {\n    type: 'binaryOp',\n    precedence: 20,\n    eval: (left, right) => left <= right\n  },\n  '&&': {\n    type: 'binaryOp',\n    precedence: 10,\n    eval: (left, right) => left && right\n  },\n  '||': {\n    type: 'binaryOp',\n    precedence: 10,\n    eval: (left, right) => left || right\n  },\n  in: {\n    type: 'binaryOp',\n    precedence: 20,\n    eval: (left, right) => {\n      if (typeof right === 'string') {\n        return right.indexOf(left) !== -1\n      }\n      if (Array.isArray(right)) {\n        return right.some(elem => elem === left)\n      }\n      return false\n    }\n  },\n  '!': {\n    type: 'unaryOp',\n    precedence: Infinity,\n    eval: right => !right\n  }\n}\n","/*\n * Jexl\n * Copyright 2019 Tom Shawver\n */\n\nconst handlers = require('./handlers')\nconst states = require('./states').states\n\n/**\n * The Parser is a state machine that converts tokens from the {@link Lexer}\n * into an Abstract Syntax Tree (AST), capable of being evaluated in any\n * context by the {@link Evaluator}.  The Parser expects that all tokens\n * provided to it are legal and typed properly according to the grammar, but\n * accepts that the tokens may still be in an invalid order or in some other\n * unparsable configuration that requires it to throw an Error.\n * @param {{}} grammar The grammar map to use to parse Jexl strings\n * @param {string} [prefix] A string prefix to prepend to the expression string\n *      for error messaging purposes.  This is useful for when a new Parser is\n *      instantiated to parse an subexpression, as the parent Parser's\n *      expression string thus far can be passed for a more user-friendly\n *      error message.\n * @param {{}} [stopMap] A mapping of token types to any truthy value. When the\n *      token type is encountered, the parser will return the mapped value\n *      instead of boolean false.\n */\nclass Parser {\n  constructor(grammar, prefix, stopMap) {\n    this._grammar = grammar\n    this._state = 'expectOperand'\n    this._tree = null\n    this._exprStr = prefix || ''\n    this._relative = false\n    this._stopMap = stopMap || {}\n  }\n\n  /**\n   * Processes a new token into the AST and manages the transitions of the state\n   * machine.\n   * @param {{type: <string>}} token A token object, as provided by the\n   *      {@link Lexer#tokenize} function.\n   * @throws {Error} if a token is added when the Parser has been marked as\n   *      complete by {@link #complete}, or if an unexpected token type is added.\n   * @returns {boolean|*} the stopState value if this parser encountered a token\n   *      in the stopState mapb false if tokens can continue.\n   */\n  addToken(token) {\n    if (this._state === 'complete') {\n      throw new Error('Cannot add a new token to a completed Parser')\n    }\n    const state = states[this._state]\n    const startExpr = this._exprStr\n    this._exprStr += token.raw\n    if (state.subHandler) {\n      if (!this._subParser) {\n        this._startSubExpression(startExpr)\n      }\n      const stopState = this._subParser.addToken(token)\n      if (stopState) {\n        this._endSubExpression()\n        if (this._parentStop) return stopState\n        this._state = stopState\n      }\n    } else if (state.tokenTypes[token.type]) {\n      const typeOpts = state.tokenTypes[token.type]\n      let handleFunc = handlers[token.type]\n      if (typeOpts.handler) {\n        handleFunc = typeOpts.handler\n      }\n      if (handleFunc) {\n        handleFunc.call(this, token)\n      }\n      if (typeOpts.toState) {\n        this._state = typeOpts.toState\n      }\n    } else if (this._stopMap[token.type]) {\n      return this._stopMap[token.type]\n    } else {\n      throw new Error(\n        `Token ${token.raw} (${token.type}) unexpected in expression: ${this._exprStr}`\n      )\n    }\n    return false\n  }\n\n  /**\n   * Processes an array of tokens iteratively through the {@link #addToken}\n   * function.\n   * @param {Array<{type: <string>}>} tokens An array of tokens, as provided by\n   *      the {@link Lexer#tokenize} function.\n   */\n  addTokens(tokens) {\n    tokens.forEach(this.addToken, this)\n  }\n\n  /**\n   * Marks this Parser instance as completed and retrieves the full AST.\n   * @returns {{}|null} a full expression tree, ready for evaluation by the\n   *      {@link Evaluator#eval} function, or null if no tokens were passed to\n   *      the parser before complete was called\n   * @throws {Error} if the parser is not in a state where it's legal to end\n   *      the expression, indicating that the expression is incomplete\n   */\n  complete() {\n    if (this._cursor && !states[this._state].completable) {\n      throw new Error(`Unexpected end of expression: ${this._exprStr}`)\n    }\n    if (this._subParser) {\n      this._endSubExpression()\n    }\n    this._state = 'complete'\n    return this._cursor ? this._tree : null\n  }\n\n  /**\n   * Indicates whether the expression tree contains a relative path identifier.\n   * @returns {boolean} true if a relative identifier exists false otherwise.\n   */\n  isRelative() {\n    return this._relative\n  }\n\n  /**\n   * Ends a subexpression by completing the subParser and passing its result\n   * to the subHandler configured in the current state.\n   * @private\n   */\n  _endSubExpression() {\n    states[this._state].subHandler.call(this, this._subParser.complete())\n    this._subParser = null\n  }\n\n  /**\n   * Places a new tree node at the current position of the cursor (to the 'right'\n   * property) and then advances the cursor to the new node. This function also\n   * handles setting the parent of the new node.\n   * @param {{type: <string>}} node A node to be added to the AST\n   * @private\n   */\n  _placeAtCursor(node) {\n    if (!this._cursor) {\n      this._tree = node\n    } else {\n      this._cursor.right = node\n      this._setParent(node, this._cursor)\n    }\n    this._cursor = node\n  }\n\n  /**\n   * Places a tree node before the current position of the cursor, replacing\n   * the node that the cursor currently points to. This should only be called in\n   * cases where the cursor is known to exist, and the provided node already\n   * contains a pointer to what's at the cursor currently.\n   * @param {{type: <string>}} node A node to be added to the AST\n   * @private\n   */\n  _placeBeforeCursor(node) {\n    this._cursor = this._cursor._parent\n    this._placeAtCursor(node)\n  }\n\n  /**\n   * Sets the parent of a node by creating a non-enumerable _parent property\n   * that points to the supplied parent argument.\n   * @param {{type: <string>}} node A node of the AST on which to set a new\n   *      parent\n   * @param {{type: <string>}} parent An existing node of the AST to serve as the\n   *      parent of the new node\n   * @private\n   */\n  _setParent(node, parent) {\n    Object.defineProperty(node, '_parent', {\n      value: parent,\n      writable: true\n    })\n  }\n\n  /**\n   * Prepares the Parser to accept a subexpression by (re)instantiating the\n   * subParser.\n   * @param {string} [exprStr] The expression string to prefix to the new Parser\n   * @private\n   */\n  _startSubExpression(exprStr) {\n    let endStates = states[this._state].endStates\n    if (!endStates) {\n      this._parentStop = true\n      endStates = this._stopMap\n    }\n    this._subParser = new Parser(this._grammar, exprStr, endStates)\n  }\n}\n\nmodule.exports = Parser\n","/*\n * Jexl\n * Copyright 2019 Tom Shawver\n */\n\n/**\n * Handles a subexpression that's used to define a transform argument's value.\n * @param {{type: <string>}} ast The subexpression tree\n */\nexports.argVal = function(ast) {\n  this._cursor.args.push(ast)\n}\n\n/**\n * Handles new array literals by adding them as a new node in the AST,\n * initialized with an empty array.\n */\nexports.arrayStart = function() {\n  this._placeAtCursor({\n    type: 'ArrayLiteral',\n    value: []\n  })\n}\n\n/**\n * Handles a subexpression representing an element of an array literal.\n * @param {{type: <string>}} ast The subexpression tree\n */\nexports.arrayVal = function(ast) {\n  if (ast) {\n    this._cursor.value.push(ast)\n  }\n}\n\n/**\n * Handles tokens of type 'binaryOp', indicating an operation that has two\n * inputs: a left side and a right side.\n * @param {{type: <string>}} token A token object\n */\nexports.binaryOp = function(token) {\n  const precedence = this._grammar[token.value].precedence || 0\n  let parent = this._cursor._parent\n  while (\n    parent &&\n    parent.operator &&\n    this._grammar[parent.operator].precedence >= precedence\n  ) {\n    this._cursor = parent\n    parent = parent._parent\n  }\n  const node = {\n    type: 'BinaryExpression',\n    operator: token.value,\n    left: this._cursor\n  }\n  this._setParent(this._cursor, node)\n  this._cursor = parent\n  this._placeAtCursor(node)\n}\n\n/**\n * Handles successive nodes in an identifier chain.  More specifically, it\n * sets values that determine how the following identifier gets placed in the\n * AST.\n */\nexports.dot = function() {\n  this._nextIdentEncapsulate =\n    this._cursor &&\n    this._cursor.type !== 'UnaryExpression' &&\n    (this._cursor.type !== 'BinaryExpression' ||\n      (this._cursor.type === 'BinaryExpression' && this._cursor.right))\n  this._nextIdentRelative =\n    !this._cursor || (this._cursor && !this._nextIdentEncapsulate)\n  if (this._nextIdentRelative) {\n    this._relative = true\n  }\n}\n\n/**\n * Handles a subexpression used for filtering an array returned by an\n * identifier chain.\n * @param {{type: <string>}} ast The subexpression tree\n */\nexports.filter = function(ast) {\n  this._placeBeforeCursor({\n    type: 'FilterExpression',\n    expr: ast,\n    relative: this._subParser.isRelative(),\n    subject: this._cursor\n  })\n}\n\n/**\n * Handles identifier tokens by adding them as a new node in the AST.\n * @param {{type: <string>}} token A token object\n */\nexports.identifier = function(token) {\n  const node = {\n    type: 'Identifier',\n    value: token.value\n  }\n  if (this._nextIdentEncapsulate) {\n    node.from = this._cursor\n    this._placeBeforeCursor(node)\n    this._nextIdentEncapsulate = false\n  } else {\n    if (this._nextIdentRelative) {\n      node.relative = true\n      this._nextIdentRelative = false\n    }\n    this._placeAtCursor(node)\n  }\n}\n\n/**\n * Handles literal values, such as strings, booleans, and numerics, by adding\n * them as a new node in the AST.\n * @param {{type: <string>}} token A token object\n */\nexports.literal = function(token) {\n  this._placeAtCursor({\n    type: 'Literal',\n    value: token.value\n  })\n}\n\n/**\n * Queues a new object literal key to be written once a value is collected.\n * @param {{type: <string>}} token A token object\n */\nexports.objKey = function(token) {\n  this._curObjKey = token.value\n}\n\n/**\n * Handles new object literals by adding them as a new node in the AST,\n * initialized with an empty object.\n */\nexports.objStart = function() {\n  this._placeAtCursor({\n    type: 'ObjectLiteral',\n    value: {}\n  })\n}\n\n/**\n * Handles an object value by adding its AST to the queued key on the object\n * literal node currently at the cursor.\n * @param {{type: <string>}} ast The subexpression tree\n */\nexports.objVal = function(ast) {\n  this._cursor.value[this._curObjKey] = ast\n}\n\n/**\n * Handles traditional subexpressions, delineated with the groupStart and\n * groupEnd elements.\n * @param {{type: <string>}} ast The subexpression tree\n */\nexports.subExpression = function(ast) {\n  this._placeAtCursor(ast)\n}\n\n/**\n * Handles a completed alternate subexpression of a ternary operator.\n * @param {{type: <string>}} ast The subexpression tree\n */\nexports.ternaryEnd = function(ast) {\n  this._cursor.alternate = ast\n}\n\n/**\n * Handles a completed consequent subexpression of a ternary operator.\n * @param {{type: <string>}} ast The subexpression tree\n */\nexports.ternaryMid = function(ast) {\n  this._cursor.consequent = ast\n}\n\n/**\n * Handles the start of a new ternary expression by encapsulating the entire\n * AST in a ConditionalExpression node, and using the existing tree as the\n * test element.\n */\nexports.ternaryStart = function() {\n  this._tree = {\n    type: 'ConditionalExpression',\n    test: this._tree\n  }\n  this._cursor = this._tree\n}\n\n/**\n * Handles identifier tokens when used to indicate the name of a transform to\n * be applied.\n * @param {{type: <string>}} token A token object\n */\nexports.transform = function(token) {\n  this._placeBeforeCursor({\n    type: 'Transform',\n    name: token.value,\n    args: [],\n    subject: this._cursor\n  })\n}\n\n/**\n * Handles token of type 'unaryOp', indicating that the operation has only\n * one input: a right side.\n * @param {{type: <string>}} token A token object\n */\nexports.unaryOp = function(token) {\n  this._placeAtCursor({\n    type: 'UnaryExpression',\n    operator: token.value\n  })\n}\n","/*\n * Jexl\n * Copyright 2019 Tom Shawver\n */\n\nconst h = require('./handlers')\n\n/**\n * A mapping of all states in the finite state machine to a set of instructions\n * for handling or transitioning into other states. Each state can be handled\n * in one of two schemes: a tokenType map, or a subHandler.\n *\n * Standard expression elements are handled through the tokenType object. This\n * is an object map of all legal token types to encounter in this state (and\n * any unexpected token types will generate a thrown error) to an options\n * object that defines how they're handled.  The available options are:\n *\n *      {string} toState: The name of the state to which to transition\n *          immediately after handling this token\n *      {string} handler: The handler function to call when this token type is\n *          encountered in this state.  If omitted, the default handler\n *          matching the token's \"type\" property will be called. If the handler\n *          function does not exist, no call will be made and no error will be\n *          generated.  This is useful for tokens whose sole purpose is to\n *          transition to other states.\n *\n * States that consume a subexpression should define a subHandler, the\n * function to be called with an expression tree argument when the\n * subexpression is complete. Completeness is determined through the\n * endStates object, which maps tokens on which an expression should end to the\n * state to which to transition once the subHandler function has been called.\n *\n * Additionally, any state in which it is legal to mark the AST as completed\n * should have a 'completable' property set to boolean true.  Attempting to\n * call {@link Parser#complete} in any state without this property will result\n * in a thrown Error.\n *\n * @type {{}}\n */\nexports.states = {\n  expectOperand: {\n    tokenTypes: {\n      literal: { toState: 'expectBinOp' },\n      identifier: { toState: 'identifier' },\n      unaryOp: {},\n      openParen: { toState: 'subExpression' },\n      openCurl: { toState: 'expectObjKey', handler: h.objStart },\n      dot: { toState: 'traverse' },\n      openBracket: { toState: 'arrayVal', handler: h.arrayStart }\n    }\n  },\n  expectBinOp: {\n    tokenTypes: {\n      binaryOp: { toState: 'expectOperand' },\n      pipe: { toState: 'expectTransform' },\n      dot: { toState: 'traverse' },\n      question: { toState: 'ternaryMid', handler: h.ternaryStart }\n    },\n    completable: true\n  },\n  expectTransform: {\n    tokenTypes: {\n      identifier: { toState: 'postTransform', handler: h.transform }\n    }\n  },\n  expectObjKey: {\n    tokenTypes: {\n      identifier: { toState: 'expectKeyValSep', handler: h.objKey },\n      closeCurl: { toState: 'expectBinOp' }\n    }\n  },\n  expectKeyValSep: {\n    tokenTypes: {\n      colon: { toState: 'objVal' }\n    }\n  },\n  postTransform: {\n    tokenTypes: {\n      openParen: { toState: 'argVal' },\n      binaryOp: { toState: 'expectOperand' },\n      dot: { toState: 'traverse' },\n      openBracket: { toState: 'filter' },\n      pipe: { toState: 'expectTransform' }\n    },\n    completable: true\n  },\n  postTransformArgs: {\n    tokenTypes: {\n      binaryOp: { toState: 'expectOperand' },\n      dot: { toState: 'traverse' },\n      openBracket: { toState: 'filter' },\n      pipe: { toState: 'expectTransform' }\n    },\n    completable: true\n  },\n  identifier: {\n    tokenTypes: {\n      binaryOp: { toState: 'expectOperand' },\n      dot: { toState: 'traverse' },\n      openBracket: { toState: 'filter' },\n      pipe: { toState: 'expectTransform' },\n      question: { toState: 'ternaryMid', handler: h.ternaryStart }\n    },\n    completable: true\n  },\n  traverse: {\n    tokenTypes: {\n      identifier: { toState: 'identifier' }\n    }\n  },\n  filter: {\n    subHandler: h.filter,\n    endStates: {\n      closeBracket: 'identifier'\n    }\n  },\n  subExpression: {\n    subHandler: h.subExpression,\n    endStates: {\n      closeParen: 'expectBinOp'\n    }\n  },\n  argVal: {\n    subHandler: h.argVal,\n    endStates: {\n      comma: 'argVal',\n      closeParen: 'postTransformArgs'\n    }\n  },\n  objVal: {\n    subHandler: h.objVal,\n    endStates: {\n      comma: 'expectObjKey',\n      closeCurl: 'expectBinOp'\n    }\n  },\n  arrayVal: {\n    subHandler: h.arrayVal,\n    endStates: {\n      comma: 'arrayVal',\n      closeBracket: 'expectBinOp'\n    }\n  },\n  ternaryMid: {\n    subHandler: h.ternaryMid,\n    endStates: {\n      colon: 'ternaryEnd'\n    }\n  },\n  ternaryEnd: {\n    subHandler: h.ternaryEnd,\n    completable: true\n  }\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\-?\\d?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","import { Request, Context } from '../engine';\n\nexport type TestConditionalCallback = (data: string, ...args: any[]) => boolean | void;\nexport type PluginCallback = (req: Request, ctx: Context) => void | Promise<any> | PluginCallback;\n\n/**\n * Dialogue struct types\n */\nexport enum Types {\n  Definition = '!',\n  Trigger = '+',\n  Reply = '-',\n  Flow = '~',\n  Condition = '*',\n  Comment = '#',\n  ConditionalFlow = '~',\n  ConditionalReply = '-',\n  ConditionalCommand = '@',\n  ConditionalPrompt = '?',\n  ConditionalForward = '>',\n  ConditionalEvent = '+',\n}\n","import debug from 'debug';\n\nconst APP_NAME = 'BotScript';\n\nexport class Logger {\n\n  /**\n   * private members\n   */\n  private _debug: debug.Debugger;\n  private _info: debug.Debugger;\n  private _warn: debug.Debugger;\n  private _error: debug.Debugger;\n\n  constructor(prefix?: string) {\n    prefix = prefix ? ':' + prefix : '';\n    this._debug = debug(`${APP_NAME}:DEBUG${prefix }`);\n    this._info = debug(`${APP_NAME}:INFO${prefix}`);\n    this._warn = debug(`${APP_NAME}:WARN${prefix}`);\n    this._error = debug(`${APP_NAME}:ERROR${prefix}`);\n  }\n\n  get debug() {\n    return this._debug;\n  }\n\n  get info() {\n    return this._info;\n  }\n\n  get warn() {\n    return this._warn;\n  }\n\n  get error() {\n    return this._error;\n  }\n\n}\n","import axios from 'axios';\nimport { evalSync } from 'jexl';\nimport { Struct, Request } from '../engine';\nimport { TestConditionalCallback, Types } from '../interfaces/types';\nimport { Logger } from './logger';\n\nconst logger = new Logger('Utils');\n\n/**\n * Get random candidate\n * @param candidates array\n */\nexport function random<T>(candidates: T[]) {\n  return candidates[Math.floor(Math.random() * candidates.length)];\n}\n\n/**\n * Test conditional flow\n * @param dialogue\n * @param variables\n */\nexport function testConditionalFlow(dialogue: Struct, req: Request, callback: TestConditionalCallback) {\n  return testConditionalType(Types.ConditionalFlow, dialogue, req, callback);\n}\n\n/**\n * Test conditional reply\n * @param dialogue\n * @param req\n * @param callback\n */\nexport function testConditionalReply(dialogue: Struct, req: Request, callback: TestConditionalCallback) {\n  return testConditionalType(Types.ConditionalReply, dialogue, req, callback);\n}\n\n/**\n * Test conditional dialogues given type\n * @param type\n * @param dialogue\n * @param req\n * @param callback stop if callback returns true\n */\nexport function testConditionalType(type: Types, dialogue: Struct, req: Request, callback: TestConditionalCallback) {\n  if (!dialogue) {\n    logger.info('No dialogue for test:', type);\n    return false;\n  }\n\n  const separator = new RegExp(`\\\\${type}>`);\n  const conditions = (dialogue.conditions || []).filter(x => separator.test(x));\n  return conditions.some(cond => {\n    const tokens = cond.split(separator).map(x => x.trim());\n    if (tokens.length === 2) {\n      const expr = tokens[0];\n      const value = tokens[1];\n      logger.debug(`Test conditional type: ${type}, botid=${req.botId}, expr=${expr}`);\n\n      if (evaluate(expr, req.variables)) {\n        return callback(value, req);\n      }\n    }\n  });\n}\n\n/**\n * Safe eval expression\n * @param code str\n * @param context variables\n */\nexport function evaluate(code: string, context: any) {\n  const keys = Object.keys(context || {});\n  const vars = Object.assign({}, ...keys.map(x => ({\n    [x.startsWith('$') ? x : `$${x}`]: context[x],\n  })));\n\n  try {\n    logger.debug('Evaluate:', code);\n    return evalSync(code, vars);\n  } catch (err) {\n    logger.warn('Error while eval expression', { msg: (err && err.message) });\n    return undefined;\n  }\n\n}\n\n/**\n * Call http service\n * @param command\n * @param req\n */\nexport function callHttpService(command: Struct, req: Request) {\n  const headers = command.body.map(x => x.split(':'));\n  const method = command.options[0];\n  const url = command.options[1];\n  const body = /^get$/i.test(method) ? undefined : req.variables;\n\n  logger.info('Send request:', method, url, body);\n\n  return axios\n    .request({ url, headers, method: /^get$/i.test(method) ? 'GET' : 'POST', data: body })\n    .then(res => res.data)\n    .catch(err => {\n      logger.error('Can not send request:', url, method, body, headers, err);\n      return Promise.reject(err);\n    });\n}\n\n/**\n * Download botscript data.\n * @param url\n */\nexport async function downloadBotScripts(url: string): Promise<string[]> {\n  logger.info('Starting download', url);\n  // download data file.\n  const vResult = await axios.get(url);\n  // test data content type.\n  const vContentType = vResult.headers['content-type'];\n  if (/^text\\/plain/.test(vContentType as string)) {\n    const vTextData = await vResult.data;\n    return [vTextData];\n  } else if (/^application\\/json/.test(vContentType as string)) {\n    const vListData = await vResult.data; // require array response.\n    return vListData;\n  } else {\n    throw new Error('Data format unsupported!');\n  }\n}\n","// tslint:disable: jsdoc-format\nimport { Request, Context } from '../engine';\n\n/**\n> addTimeNow\n\n+ what time is it\n- it is $time\n*/\nexport function addTimeNow(req: Request, ctx: Context) {\n  const now = new Date();\n  req.variables.time = `${now.getHours()}:${now.getMinutes()}`;\n}\n","export * from './addTimeNow';\nexport * from './noReplyHandle';\nexport * from './normalize';\n","// tslint:disable: jsdoc-format\nimport { Request, Context, Struct } from '../engine';\nimport * as utils from '../lib/utils';\n\n/**\n * noReplyHandle\n * - if dialog is in the flow then repeat reply from last time\n */\nexport function noReplyHandle() {\n  const postProcessing = (res: Request, ctx: Context) => {\n    if (res.speechResponse === 'NO REPLY!') {\n      if (ctx.flows.has(res.currentFlow)) {\n        const dialog = ctx.flows.get(res.currentFlow) as Struct;\n        const replyCandidate = utils.random(dialog.replies);\n        res.speechResponse = replyCandidate;\n      } else {\n        res.speechResponse = `Sorry! I don't understand!`;\n      }\n    }\n  };\n\n  return postProcessing;\n}\n","// tslint:disable: jsdoc-format\nimport { Request } from '../engine';\nimport clean from './utils/clean';\n\n/**\n * Task: Processes input and tries to make it consumable for a bot\n * 1. spelling corrections for common spelling errors\n * 2. idiom conversions\n * 3. junk word removal from sentence\n * 5. special sentence effects (question, exclamation, revert question)\n * 6. abbreviation expansion and canonization\n */\nexport function normalize(req: Request) {\n  req.message = clean.all(req.message).replace(/[+-?!.,]+$/, '');\n}\n","const re1 = new RegExp(/\\+/g);\nconst re2 = new RegExp(/\\t/g);\nconst re3 = new RegExp(/\\s+/g);\nconst re4 = new RegExp(/(’|‘)/g);\nconst re5 = new RegExp(/(“|”)/g);\nconst re6 = new RegExp(/(–|—)/g);\nconst re7 = new RegExp(/[\\u00A1-\\u1EF3]/g);\nconst re8 = new RegExp(/[+]{1}/g);\nconst re9 = new RegExp(/<plus>/g);\nconst re10 = new RegExp(/\\d,\\d/g);\n// const re11 = new RegExp(/_/g);\n\nfunction pre(msg = '') {\n  msg = msg.replace(re1, '<plus>');\n  msg = msg.replace(re2, ' ');\n  msg = msg.replace(re3, ' ');\n  msg = msg.replace(re4, `'`);\n  msg = msg.replace(re5, '\"');\n  msg = msg.replace(re6, '—');\n  msg = msg.replace(re7, ' ');\n\n  return msg;\n}\n\nfunction post(msg = '') {\n  msg = msg.replace(re8, ' ');\n  msg = msg.replace(re9, '+');\n  // msg = msg.replace(re11, ' ');\n  msg = msg.replace(re10, v => v.replace(',', ''));\n  return msg;\n}\n\nfunction all(msg = '') {\n  return post(pre(msg)).trim();\n}\n\nexport default { pre, post, all };\n"]}